name: Build Executable

on: [push, pull_request]

jobs:
  build_linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [armv7, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Install dependencies
      run: sudo apt-get install -y gcc-arm-linux-gnueabi gcc-aarch64-linux-gnu

    - name: Build for ${{ matrix.arch }}
      run: |
        if [ "${{ matrix.arch }}" == "armv7" ]; then
          CROSS_COMPILE=arm-linux-gnueabi-;
        elif [ "${{ matrix.arch }}" == "arm64" ]; then
          CROSS_COMPILE=aarch64-linux-gnu-;
        fi
        ${CROSS_COMPILE}gcc -o testmem testmem.c

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: testmem-${{ matrix.arch }}
        path: testmem

  build_windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install GCC
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-gcc

    - name: Build
      run: gcc -o testmem.exe testmem.c

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: testmem-windows
        path: testmem.exe
